-------------------------------------------------------------------------------
{{ if .Values.ingress.enabled }}
    export INGRESS_HOST={{ .Values.ingress.hosts.http }}
    curl http://$INGRESS_HOST
    curl -k https://$INGRESS_HOST
{{ else if eq .Values.service.type "LoadBalancer" }}
    export EXTERNAL_IP=$(kubectl get -n {{ .Release.Namespace }} service {{ .Release.Name }} -o jsonpath="{.status.loadBalancer.ingress[0].ip}")
    export SERVICE_PORT_HTTP={{ .Values.service.ports.http }}
    export SERVICE_PORT_HTTPS={{ .Values.service.ports.https }}
    curl http://$EXTERNAL_IP:$SERVICE_PORT_HTTP
    curl -k https://$EXTERNAL_IP:$SERVICE_PORT_HTTPS
{{ else if eq .Values.service.type "NodePort" }}
    export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
    export NODE_PORT_HTTP=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ .Release.Name }})
    export NODE_PORT_HTTPS=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[1].nodePort}" services {{ .Release.Name }})
    curl http://$NODE_IP:$NODE_PORT_HTTP
    curl -k https://$NODE_IP:$NODE_PORT_HTTPS
{{ else if eq .Values.service.type "ClusterIP" }}
    export CLUSTER_IP=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.clusterIP}" service {{ .Release.Name }}
    export SERVICE_PORT_HTTP={{ .Values.service.ports.http }}
    export SERVICE_PORT_HTTPS={{ .Values.service.ports.https }}
    curl http://$CLUSTER_IP:$SERVICE_PORT_HTTP
    curl -k https://$CLUSTER_IP:$SERVICE_PORT_HTTPS
{{ end }}
-------------------------------------------------------------------------------